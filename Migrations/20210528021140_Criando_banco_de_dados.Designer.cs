// <auto-generated />
using System;
using ApiCadFilmes.Domain.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiCadFilmes.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20210528021140_Criando_banco_de_dados")]
    partial class Criando_banco_de_dados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiCadFilmes.Domain.Models.Entities.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocacaoId");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = 1,
                            DataCriacao = new DateTime(2021, 5, 27, 23, 11, 37, 481, DateTimeKind.Local).AddTicks(3601),
                            Genero = "Ação",
                            Nome = "Filme teste"
                        });
                });

            modelBuilder.Entity("ApiCadFilmes.Domain.Models.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = 1,
                            DataCriacao = new DateTime(2021, 5, 27, 23, 11, 37, 484, DateTimeKind.Local).AddTicks(1205),
                            Nome = "teste"
                        });
                });

            modelBuilder.Entity("ApiCadFilmes.Domain.Models.Entities.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CpfCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("ApiCadFilmes.Domain.Models.Entities.Filme", b =>
                {
                    b.HasOne("ApiCadFilmes.Domain.Models.Entities.Locacao", null)
                        .WithMany("Filmes")
                        .HasForeignKey("LocacaoId");
                });

            modelBuilder.Entity("ApiCadFilmes.Domain.Models.Entities.Locacao", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
